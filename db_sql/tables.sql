-- Oracle SQL Schema for Financial Portfolio Management System

-- 1. Users
CREATE TABLE Users (
  user_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name            VARCHAR2(100) NOT NULL,
  email           VARCHAR2(255) NOT NULL UNIQUE,
  password        VARCHAR2(255) NOT NULL,
  role            VARCHAR2(50)  NOT NULL,
  registration_date DATE        DEFAULT SYSDATE NOT NULL
);

-- 2. Accounts
CREATE TABLE Accounts (
  account_id      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id         NUMBER NOT NULL,
  account_type    VARCHAR2(50)  NOT NULL,
  balance         NUMBER(18,2)  DEFAULT 0     NOT NULL,
  currency        VARCHAR2(3)   DEFAULT 'USD' NOT NULL,
  created_at      DATE          DEFAULT SYSDATE NOT NULL,
  CONSTRAINT fk_accounts_user FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- 3. Assets
CREATE TABLE Assets (
  asset_id        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name            VARCHAR2(100) NOT NULL,
  type            VARCHAR2(50)  NOT NULL,
  ticker_symbol   VARCHAR2(20)  NOT NULL UNIQUE,
  current_price   NUMBER(18,4)  DEFAULT 0     NOT NULL,
  market_cap      NUMBER(20,2)  DEFAULT 0     NOT NULL
);

-- 4. Portfolios
CREATE TABLE Portfolios (
  portfolio_id    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id         NUMBER NOT NULL,
  total_value     NUMBER(18,2)  DEFAULT 0     NOT NULL,
  risk_level      VARCHAR2(20)  DEFAULT 'Medium',
  CONSTRAINT fk_portfolios_user FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- 5. Portfolio_Assets
CREATE TABLE Portfolio_Assets (
  portfolio_asset_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  portfolio_id       NUMBER NOT NULL,
  asset_id           NUMBER NOT NULL,
  quantity           NUMBER(20,4) NOT NULL,
  buy_price          NUMBER(18,4) NOT NULL,
  CONSTRAINT fk_pa_portfolio FOREIGN KEY (portfolio_id) REFERENCES Portfolios(portfolio_id),
  CONSTRAINT fk_pa_asset     FOREIGN KEY (asset_id) REFERENCES Assets(asset_id),
  CONSTRAINT uq_pa_portfolio_asset UNIQUE (portfolio_id, asset_id)
);

-- 6. Transactions
CREATE TABLE Transactions (
  transaction_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  portfolio_id     NUMBER NOT NULL,
  asset_id         NUMBER NOT NULL,
  type             VARCHAR2(20)  CHECK (type IN ('BUY','SELL','DIVIDEND')) NOT NULL,
  quantity         NUMBER(20,4) NOT NULL,
  price            NUMBER(18,4) NOT NULL,
  transaction_date DATE          DEFAULT SYSDATE NOT NULL,
  CONSTRAINT fk_trx_portfolio FOREIGN KEY (portfolio_id) REFERENCES Portfolios(portfolio_id),
  CONSTRAINT fk_trx_asset     FOREIGN KEY (asset_id) REFERENCES Assets(asset_id)
);

-- 7. Orders
CREATE TABLE Orders (
  order_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id          NUMBER NOT NULL,
  asset_id         NUMBER NOT NULL,
  order_type       VARCHAR2(20)  CHECK (order_type IN ('BUY','SELL')) NOT NULL,
  quantity         NUMBER(20,4) NOT NULL,
  order_status     VARCHAR2(20)  DEFAULT 'PENDING' NOT NULL,
  order_date       DATE          DEFAULT SYSDATE NOT NULL,
  CONSTRAINT fk_orders_user  FOREIGN KEY (user_id)  REFERENCES Users(user_id),
  CONSTRAINT fk_orders_asset FOREIGN KEY (asset_id) REFERENCES Assets(asset_id)
);

-- 8. Market_Data
CREATE TABLE Market_Data (
  market_data_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  asset_id         NUMBER NOT NULL,
  data_date        DATE          NOT NULL,
  open_price       NUMBER(18,4)  NOT NULL,
  close_price      NUMBER(18,4)  NOT NULL,
  volume           NUMBER(20)    DEFAULT 0,
  CONSTRAINT fk_md_asset         FOREIGN KEY (asset_id) REFERENCES Assets(asset_id),
  CONSTRAINT uq_md_asset_date    UNIQUE (asset_id, data_date)
);

-- 9. Currency_Exchange
CREATE TABLE Currency_Exchange (
  exchange_id      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  currency_from    VARCHAR2(3)   NOT NULL,
  currency_to      VARCHAR2(3)   NOT NULL,
  exchange_rate    NUMBER(18,6)  NOT NULL,
  rate_date        DATE          DEFAULT SYSDATE NOT NULL,
  CONSTRAINT uq_exch_pair_date   UNIQUE (currency_from, currency_to, rate_date)
);

-- 10. Risk_Analysis
CREATE TABLE Risk_Analysis (
  risk_id          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  portfolio_id     NUMBER NOT NULL,
  volatility       NUMBER(10,6),
  sharpe_ratio     NUMBER(10,6),
  beta_coefficient NUMBER(10,6),
  analysis_date    DATE          DEFAULT SYSDATE NOT NULL,
  CONSTRAINT fk_risk_portfolio FOREIGN KEY (portfolio_id) REFERENCES Portfolios(portfolio_id),
  CONSTRAINT uq_risk_portfolio_date UNIQUE (portfolio_id, analysis_date)
);

-- 11. Performance_Metrics
CREATE TABLE Performance_Metrics (
  performance_id   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  portfolio_id     NUMBER NOT NULL,
  ROI              NUMBER(8,6),
  annual_return    NUMBER(8,6),
  profit_loss      NUMBER(18,2),
  metrics_date     DATE          DEFAULT SYSDATE NOT NULL,
  CONSTRAINT fk_perf_portfolio FOREIGN KEY (portfolio_id) REFERENCES Portfolios(portfolio_id),
  CONSTRAINT uq_perf_portfolio_date UNIQUE (portfolio_id, metrics_date)
);

-- 12. Alerts
CREATE TABLE Alerts (
  alert_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id          NUMBER NOT NULL,
  message          VARCHAR2(4000) NOT NULL,
  alert_type       VARCHAR2(50)   NOT NULL,
  created_at       DATE           DEFAULT SYSDATE NOT NULL,
  CONSTRAINT fk_alerts_user     FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- 13. Deposits
CREATE TABLE Deposits (
  deposit_id       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id          NUMBER NOT NULL,
  amount           NUMBER(18,2) NOT NULL,
  currency         VARCHAR2(3)  NOT NULL,
  deposit_date     DATE         DEFAULT SYSDATE NOT NULL,
  CONSTRAINT fk_deposits_user  FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- 14. Withdrawals
CREATE TABLE Withdrawals (
  withdrawal_id    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id          NUMBER NOT NULL,
  amount           NUMBER(18,2) NOT NULL,
  currency         VARCHAR2(3)  NOT NULL,
  withdrawal_date  DATE         DEFAULT SYSDATE NOT NULL,
  status           VARCHAR2(20) DEFAULT 'PENDING' NOT NULL,
  CONSTRAINT fk_withdrawals_user FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- 15. Dividends
CREATE TABLE Dividends (
  dividend_id      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  portfolio_id     NUMBER NOT NULL,
  asset_id         NUMBER NOT NULL,
  dividend_amount  NUMBER(18,2) NOT NULL,
  dividend_date    DATE         DEFAULT SYSDATE NOT NULL,
  CONSTRAINT fk_div_portfolio FOREIGN KEY (portfolio_id) REFERENCES Portfolios(portfolio_id),
  CONSTRAINT fk_div_asset     FOREIGN KEY (asset_id)     REFERENCES Assets(asset_id)
);

-- 16. Audit_Log
CREATE TABLE Audit_Log (
  log_id           NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  action           VARCHAR2(50)  NOT NULL,
  table_name       VARCHAR2(50)  NOT NULL,
  user_id          NUMBER,
  log_timestamp    DATE          DEFAULT SYSDATE NOT NULL,
  description      VARCHAR2(4000),
  CONSTRAINT fk_audit_user     FOREIGN KEY (user_id) REFERENCES Users(user_id)
);

-- Additional indexing recommendations
-- CREATE INDEX idx_transactions_date ON Transactions(transaction_date);
-- CREATE INDEX idx_market_data_date ON Market_Data(data_date);
-- CREATE INDEX idx_currency_exchange_date ON Currency_Exchange(rate_date);

